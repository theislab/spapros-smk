
# when using relative paths: note that the working directory is the pwd of the terminal from where snakemake is run, 
# this should be .../spapros-smk  (also possible: .../spapros-smk/workflow, might mess things up though)
DATA_DIR: ../data
DATA_DIR_TMP: ../data/tmp_data
RESULTS_DIR: results
SAVE_METHOD_SPECIFIC_OUTPUT: True # Whether to save method specific output of the selection methods (will be in RESULTS_DIR+"method_specific/{run}/")
PRELIMINARY_EVAL_SUMMARY: False # Whether to just summarise the currently available evaluation results and not run anything else.
# NOTE: PRELIMINARY_EVAL_SUMMARY can lead to wrong values for set ids that partially miss evaluation files!!!

#DATA_DIR: ../../data
#DATA_DIR_TMP: ../../data/tmp_data
#RESULTS_DIR: ../results

selections:
  batch_test:
    datasets: [adata_test]
    dataset_param:
      processing: ["binarize"]
    selection_param:
      n: [25] 
      method_specific_processing: [False] #[True, False]
      "gene_key": ["highly_variable"]
    methods:
      spapros
      #DE
      #pca
#  batch_test:
#    datasets: [adata_test]
#    #dataset_param:
#    #  cells_per_ct_n_seeds : [4]
#    selection_param:
#      n: [25] #[5] #[75]  #,100,150]
#      method_specific_processing: [True] #[True, False]
#      "gene_key": ["highly_variable"]
#    methods:
#      DE
#      pca
#      #spapros
#      #scgenefit
#      #nsforest
#      #scmer
#      #smash
#      #asfs
#      #cosg
#  batch_test2:
#    datasets: [adata_test]
#    dataset_param:
#      cells_per_ct_n_seeds : [1]
#      cells_per_ct : [50]
#    selection_param:
#      n: [25] #[5] #[75]  #,100,150]
#      method_specific_processing: [True] #[True, False]    
#      "gene_key": ["highly_variable"]  
#    methods:
#      DE
#      pca      
#      #spapros
#  batch1:
#    datasets: [sc_mouse_brain]
#    selection_param:
#      n: [50,75,100,150]
#    methods:
#      spapros
#      nsforest
#      scmer
#      DE
#  batch1.2:
#    datasets: [sc_mouse_brain]
#    dataset_param:
#      cells_per_ct: [50,100,200,500,1000,None]
#    selection_param:
#      n: [50,150]
#    methods:
#      spapros
#  batch2:
#    datasets: [Mad, Lit]
#    selection_param:
#      n: [50,150]
#    methods:
#      geneBasis
#  batch2.2:
#    datasets: [Mad, Lit]
#    selection_param:
#      n: [50,150]
#      gene_key: ["hvg_probe_constraint"]
#    methods:
#      spapros
#  batch3:
#    datasets: [HLCA]
#    selection_param:
#      n: [50,150]
#      ct_key: ["annotation_level1","annotation_level2","annotation_level3","annotation_level4","annotation_level5"]
#               transf_ann_level_1_label, transf_ann_level_2_label, transf_ann_level_3_label, transf_ann_level_4_label, transf_ann_level_5_label
#    methods:
#      spapros
#  batch4:
#    datasets: [Mad, Mey, Lit, mouse_sc]
#    dataset_param:
#      n_cts : [...]
#      cells_per_ct : [...]
#      cells_per_ct_n_seeds : [10]
#    selection_param:
#      n: [50,150]
#    methods:
#      spapros
    #param_link: 
    #  dataset_param-cells_per_ct: methods-spapros-

evaluations:
  eval_batch1:
    batches: [batch_test]
    selection_dataset: False
    datasets: [adata_test]
    dataset_param:
      processing: [lognorm]
    metrics: [cluster_similarity] #,  knn_overlap,  forest_clfs, gene_corr]
#  eval_batch1.2:
#    batches: [batch_test2]
#    selection_dataset: False
#    datasets: [adata_test]
#    dataset_param:
#      processing: [lognorm]    
#    metrics: [forest_clfs]
#  eval_batch1.3:
#    batches: [batch_test2]
#    selection_dataset: True
#    datasets: [adata_testest]
#    dataset_param:
#      processing: [lognorm]
#    metrics: [forest_clfs, knn_overlap, gene_corr]    
  #eval_batch1:
  #  batches: [batch1]
  #  selection_dataset: False
  #  datasets: [sn_human_brain, merfish_human_brain]
  #  dataset_param:
  #    processing: [lognorm]
  #  metrics: [cluster_similarity,  knn_overlap,  forest_clf]
  #eval_batch1.2:
  #  batches: [batch1.2]
  #  selection_dataset: False
  #  datasets: [merfish_human_brain]
  #  dataset_param:
  #    processing: [lognorm]    
  #  metrics: [forest_clf]
  #eval_batch2:
  #  batches: [batch2, batch2.2]
  #  selection_dataset: True
  #  datasets: []
  #  dataset_param:
  #    processing: [lognorm]    
  #  metrics: [cluster_similarity,  knn_overlap,  forest_clf]
      