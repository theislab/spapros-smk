
# when using relative paths: note that the working directory is the pwd of the terminal from where snakemake is run, 
# this should be .../spapros-smk  (also possible: .../spapros-smk/workflow, might mess things up though)
DATA_DIR: /lustre/groups/ml01/workspace/louis.kuemmerle/projects/G1/data/processed_rev
DATA_DIR_TMP: /lustre/groups/ml01/workspace/louis.kuemmerle/projects/G1/data/processed_rev/tmp_data
RESULTS_DIR: /lustre/groups/ml01/workspace/louis.kuemmerle/projects/G1/results/spapros_smk_res
SAVE_METHOD_SPECIFIC_OUTPUT: True # Whether to save method specific output of the selection methods (will be in RESULTS_DIR+"method_specific/{run}/")
PRELIMINARY_EVAL_SUMMARY: False # Whether to just summarise the currently available evaluation results and not run anything else.
# NOTE: PRELIMINARY_EVAL_SUMMARY can lead to wrong values for set ids that partially miss evaluation files!!!


selections:
  batch1:
    datasets: [2019Hodge_sn_human_brain_MTG_min20perct] 
    selection_param:
      n: [50,75,100,150]
      gene_key: ["merfish_gene"] #[None, "merfish_gene"]
    methods:
      spapros
      spaproscto
      nsforest
      scmer
      DE
  batch1.2:
    datasets: [2019Hodge_sn_human_brain_MTG_min20perct]
    dataset_param:
      cells_per_ct: [10,25,50,100,200,500,1000,None]
    selection_param:
      n: [50,150]
      gene_key: ["merfish_gene"] #[None, "merfish_gene"]      
    methods:
      spapros
      spaproscto
  batch2:
    datasets: [Madissoon2019_w_cts, Litvinukova2020_w_cts]
    selection_param:
      n: [50,150]
    methods:
      genebasis
      persist
      persistus
  batch2.3:
    datasets: [Madissoon2019_w_cts, Litvinukova2020_w_cts]
    selection_param:
      n: [50,150]
    methods:
      spapros
      spaproscto
      DE
      pca
      scgenefit
      nsforest
      scmer
      cosg
      triku
      selfe
      scpnmf
      #smash
  batch2.4:
    datasets: [Madissoon2019_w_cts, Litvinukova2020_w_cts]
    selection_param:
      n: [50]
    methods:
      asfs
  batch3:
    datasets: [2211_HLCA_subset_raw]
    selection_param:
      n: [50,100,150]
      ct_key: ["ann_level_1", "ann_level_2", "ann_level_3", "ann_level_4", "ann_level_5"]
    methods:
      spapros
  batch4:
    datasets: [Madissoon2019_w_cts, Meyer5loc2021_w_cts, Litvinukova2020_w_cts, 2019Hodge_sn_human_brain_MTG_min20perct]
    dataset_param:
      n_cts : [5, 10, 25, 50]
      cells_per_ct : [None, 100, 500, 1000]
      cells_per_ct_n_seeds : [5]
    selection_param:
      n: [50,150]
    methods:
      spapros
  batch6.1:
    datasets: [2019Hodge_sn_human_brain_MTG_min20perct]
    dataset_param:
      bootstrap_n_seeds: [7]
    selection_param:
      n: [50,150]
      gene_key: ["merfish_gene"] #[None, "merfish_gene"]
    methods:
      spapros
      spaproscto
      DE
      pca
      scgenefit
      nsforest
      scmer
      smash
      cosg
      triku
      selfe
      scpnmf
      genebasis
      persist
      persistus
  batch6.2.1:
    datasets: [merfish_MTG_no_vessels]
    dataset_param:
      ct_key: [clean_type]
      bootstrap_n_seeds: [7]
    selection_param:
      n: [50,150]
      gene_key: ["sn_genes"] 
      "ct_key": ["clean_type"]
    methods:
      spapros
      spaproscto
      DE
      pca
      scgenefit
      nsforest
      scmer
      smash
      cosg
      triku
      selfe
      scpnmf
      genebasis
      persist
      persistus
  batch6.2.2:
    datasets: [merfish_MTG_no_vessels]
    dataset_param:
      ct_key: [cluster_L3]
      bootstrap_n_seeds: [7]
    selection_param:
      n: [50,150]
      gene_key: ["sn_genes"] 
      "ct_key": ["cluster_L3"]
    methods:
      spapros
      spaproscto
      DE
      pca
      scgenefit
      nsforest
      scmer
      smash
      cosg
      triku
      selfe
      scpnmf
      genebasis
      persist
      persistus
#  batch6.3.1:
#    datasets: [2211_HLCA_subset_raw]
#    dataset_param:
#      bootstrap_n_seeds: [7]
#    selection_param:
#      n: [50,150]
#      "ct_key": ["ann_level_1"]
#    methods:
#      spapros
#      spaproscto
#      DE
#      pca
#      scgenefit
#      nsforest
#      scmer
#      smash
#      cosg
#      triku
#      selfe
#      scpnmf
#  batch6.3.2:
#    datasets: [2211_HLCA_subset_raw]
#    dataset_param:
#      bootstrap_n_seeds: [7]
#    selection_param:
#      n: [50,150]
#      "ct_key": ["ann_level_3"]
#    methods:
#      spapros
#      spaproscto
#      DE
#      pca
#      scgenefit
#      nsforest
#      scmer
#      smash
#      cosg
#      triku
#      selfe
#      scpnmf
    
#  batch2.2:
#    datasets: [Madissoon2019_w_cts, Litvinukova2020_w_cts]
#    selection_param:
#      n: [50,150]
#      gene_key: ["hvg_probe_constraint"]
#    methods:
#      spapros
#  batch5:
#    datasets: [...]
#    selection_param:
#      n: [50,150]
#    methods:
#      spapros
#      DE
#      pca
#      scgenefit
#      nsforest
#      scmer
#      smash
#      asfs
#      cosg
#      triku
#      selfe
#      genebasis
#      scpnmf
#
#
evaluations:
  eval_batch2:
    batches: [batch2, batch2.3, batch2.4]  #batch2.2, TODO: add when probe design constraint was used
    selection_dataset: True
    datasets: []
    dataset_param:
      processing: [lognorm]    
    metrics: [cluster_similarity,  knn_overlap,  forest_clfs, gene_corr]
  eval_batch1:
    batches: [batch1]
    selection_dataset: False
    datasets: [2019Hodge_sn_human_brain_MTG_min20perct]
    dataset_param:
      processing: [lognorm]
    metrics: [cluster_similarity, knn_overlap, forest_clfs]
  eval_batch1.2:
    batches: [batch1,batch1.2]
    selection_dataset: False
    datasets: [merfish_MTG, merfish_MTG_no_vessels]
    dataset_param:
      processing: [lognorm]
      ct_key: [clean_type, cluster_L3]
    metrics: [knn_overlap, forest_clfs]
  eval_batch6.1:
    batches: [batch6.1, batch6.2.1]
    selection_dataset: False
    datasets: [2019Hodge_sn_human_brain_MTG_min20perct]
    dataset_param:
      processing: [lognorm]
      ct_key: [celltype]
    metrics: [cluster_similarity, knn_overlap, forest_clfs]
  eval_batch6.2.1:
    batches: [batch6.1, batch6.2.1]
    selection_dataset: False
    datasets: [merfish_MTG_no_vessels]
    dataset_param:
      processing: [lognorm]
      ct_key: [clean_type]
    metrics: [cluster_similarity, knn_overlap, forest_clfs]
  eval_batch6.2.2:
    batches: [batch6.2.1, batch6.2.2]
    selection_dataset: False
    datasets: [merfish_MTG_no_vessels]
    dataset_param:
      processing: [lognorm]
      ct_key: [cluster_L3]
    metrics: [cluster_similarity, knn_overlap, forest_clfs]
#  eval_batch6.3.1:
#    batches: [batch6.3.1]
#    selection_dataset: False
#    datasets: [2211_HLCA_subset_raw]
#    dataset_param:
#      processing: [lognorm]
#      ct_key: [ann_level_1]
#    metrics: [cluster_similarity, knn_overlap, forest_clfs]
#  eval_batch6.3.2:
#    batches: [batch6.3.1, batch6.3.2]
#    selection_dataset: False
#    datasets: [2211_HLCA_subset_raw]
#    dataset_param:
#      processing: [lognorm]
#      ct_key: [ann_level_3]
#    metrics: [cluster_similarity, knn_overlap, forest_clfs]
#  eval_batch2:
#    batches: [batch2, batch2.2, batch2.3]
#    selection_dataset: True
#    datasets: []
#    dataset_param:
#      processing: [lognorm]    
#    metrics: [cluster_similarity,  knn_overlap,  forest_clfs]
#  eval_batch2.2:
#    batches: [batch5]
#    selection_dataset: True
#    datasets: []
#    dataset_param:
#      processing: [lognorm]    
#    metrics: [cluster_similarity,  knn_overlap,  forest_clfs]
      